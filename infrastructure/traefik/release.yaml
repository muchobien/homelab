apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: flux-system
spec:
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik
      version: 20.8.0
  interval: 1h0m0s
  releaseName: traefik
  targetNamespace: traefik
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
    service:
      enabled: false
    persistence:
      enabled: true
      storageClass: longhorn
    env:
      - name: CF_API_KEY
        valueFrom:
          secretKeyRef:
            name: traefik-secrets
            key: apiKey
      - name: CF_API_EMAIL
        valueFrom:
          secretKeyRef:
            name: traefik-secrets
            key: email
      - name: WILDCARD_DOMAIN
        valueFrom:
          secretKeyRef:
            name: traefik-secrets
            key: wildcardDomain
    certResolvers:
      letsencrypt:
        email: $(CF_API_EMAIL)
        storage: /data/acme.json
        dnsChallenge:
          delayBeforeCheck: 90
          provider: cloudflare
          resolvers:
            - 1.1.1.1:53
            - 1.0.0.1:53
    ports:
      websecure:
        port: 8443
        expose: true
        exposedPort: 443
        protocol: TCP
        tls:
          enabled: true
          certResolver: letsencrypt
          domains:
            - main: $(WILDCARD_DOMAIN)
              sans:
                - $(WILDCARD_DOMAIN)

    ingressRoute:
      dashboard:
        enabled: true
        entryPoints:
          - "websecure"
        matchRule: "Host(`traefik.krosf.com`)"

    resources:
      requests:
        cpu: "100m"
        memory: "50Mi"
      limits:
        cpu: "300m"
        memory: "150Mi"
    deployment:
      initContainers:
        - name: volume-permissions
          image: busybox:1.35.0
          command:
            [
              "sh",
              "-c",
              "touch /data/acme.json && chmod -Rv 600 /data/* && chown 65532:65532 /data/acme.json",
            ]
          volumeMounts:
            - name: data
              mountPath: /data
    metrics:
      prometheus:
        enabled: true
        service:
          enabled: true
        serviceMonitor:
          metricRelabelings:
            - sourceLabels: [__name__]
              separator: ;
              regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
              replacement: $1
              action: drop
          relabelings:
            - sourceLabels: [__meta_kubernetes_pod_node_name]
              separator: ;
              regex: ^(.*)$
              targetLabel: nodename
              replacement: $1
              action: replace
          jobLabel: traefik
          interval: 30s
          honorLabels: true
          additionalLabels:
            release: kube-prometheus-stack
        prometheusRule:
          rules:
            - alert: TraefikDown
              expr: up{job="traefik"} == 0
              for: 5m
              labels:
                context: traefik
                severity: warning
              annotations:
                summary: "Traefik Down"
                description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"
